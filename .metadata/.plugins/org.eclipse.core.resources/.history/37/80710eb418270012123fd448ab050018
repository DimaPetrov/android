package com.example.newapp;

import java.util.Random;

import android.graphics.Color;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.Animation.AnimationListener;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.RelativeLayout.LayoutParams;

public class Shape extends GameSpace {

	public void startGame()
	{
		RelativeLayout.LayoutParams objParam[] = new RelativeLayout.LayoutParams[6];
        imageArr = new ImageView[6];
        
        int collect[] = new int[6];
        collect[0] = R.drawable.p_games_shapecircle;
        for(int i =1; i<6; i++)
        	collect[i] = collect[i-1] +1;
        Random r = new Random();
        right_ind = r.nextInt(6);
        TextView text = new TextView(cont);
        //text.setLeft(400);
        //text.setTop(20);
        myLayout.addView(text);
        text.setTextSize(30);
        text.setTextColor(Color.BLACK);
        int instx=200, insty=100;
        for (int i=0; i<6; i++)
        {	
        	if (i == 3)
        	{
        		insty+=size+5;
        		instx = 200;
        	}
        	objParam[i] = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        	objParam[i].width = size;
            objParam[i].height = size;
            objParam[i].leftMargin = instx;
        	objParam[i].topMargin = insty;
        	imageArr[i] = new ImageView(cont);
        	r = new Random();
        	int q = r.nextInt(6);
        	while (collect[q]==0)
        		q = r.nextInt(6);
        	imageArr[i].setId(i+1);
        	imageArr[i].setBackgroundResource(collect[q]);
        	if (q == right_ind)
        		right_id = imageArr[i].getId();
        	collect[q] = 0;
        	myLayout.addView(imageArr[i],objParam[i]);
        	imageArr[i].setOnClickListener(shapeListener);
        	instx += objParam[i].width+5;
        }
        switch (right_ind)
        {
        	case 0:
        		text.setText("Circle");
        		break;
        	case 1:
        		text.setText("Diamond");
        		break;
        	case 2:
        		text.setText("Heart");
        		break;
        	case 3:
        		text.setText("Square");
        		break;
        	case 4:
        		text.setText("Star");
        		break;
        	case 5:
        		text.setText("Triangle");
        		break;
        }
        //text.setText(text.getText() + String.valueOf(right_ind) + String.valueOf(right_id));
        instx = 0; 
        myLayout.startAnimation(animin);
        myLayout.bringToFront();
	}
	
	
	OnClickListener shapeListener = new OnClickListener() {
	       public void onClick(View v) 
	       {
	    	   Log.v("Touch", String.valueOf(v.getId()));
	    	   	if (v.getId() == right_id)
	   			{	
	    	   		for (int i=0; i<6; i++)
	    	   			imageArr[i].setClickable(false);
	   				Animation anim = AnimationUtils.loadAnimation(Shape.this, R.anim.shapewin);
	   				anim.setAnimationListener(new AnimationListener(){

						public void onAnimationEnd(Animation animation) {
							nextgame();
							
						}

						public void onAnimationRepeat(Animation animation) {
							// TODO Auto-generated method stub
							
						}

						public void onAnimationStart(Animation animation) {
							// TODO Auto-generated method stub
							
						}
	   					
	   				});
	   				v.startAnimation(anim);
	   				
	   			}
	   			else
	   			{
	   				Animation anim = AnimationUtils.loadAnimation(cont, R.anim.slide_right_in);
	   				anim.setRepeatCount(3);
	   				anim.setRepeatMode(Animation.REVERSE);
	   				v.startAnimation(anim);
	   			}
	      }
	 };
	
}
