package com.example.newapp;

import java.util.Random;

import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.view.animation.Animation.AnimationListener;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;

public class Size extends GameSpace{
	
	ImageView localBox;
	Animation transAnim;
	
	public void startGame()
	{
		win = 0;
		localBox = new ImageView(cont);
		instArr = new int[3][2];
		imageArr = new ImageView[3];
		int collect[] = new int[20];
        collect[0] = R.drawable.o_album_en;
        for(int i =1; i<20; i++)
        	collect[i] = collect[i-1] +1;
        RelativeLayout.LayoutParams objParam[] = new RelativeLayout.LayoutParams[3];
        RelativeLayout.LayoutParams boxParam[] = new RelativeLayout.LayoutParams[3];
        ImageView[] boxArr = new ImageView[3];
        int instx=5, insty=100;
        for (int i=0; i<3; i++)
        {
        	//instArr[i][0] = instx;
        	//instArr[i][1] = insty;
        	objParam[i] = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
            objParam[i].leftMargin = instx;
        	objParam[i].topMargin = insty;
        	
        	imageArr[i] = new ImageView(cont);
        	Random r = new Random();
        	int q = r.nextInt(20);
        	while (collect[q]==0)
        		q = r.nextInt(20);
        	imageArr[i].setBackgroundResource(collect[q]);
        	collect[q] = 0;
        	imageArr[i].setId(i+1);
        	myLayout.addView(imageArr[i],objParam[i]);
        	imageArr[i].setOnTouchListener(sizeListener);
        	
        	boxParam[i] = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        	boxArr[i] = new ImageView(cont);
        	boxArr[i].setId((i+1)*10);
        	//boxArr[i].setBackgroundColor(Color.BLACK);
        	myLayout.addView(boxArr[i],boxParam[i]);
        	
        	instx += objParam[i].width+5;
        	//insty += 51;
        	
        }
        int q = 70;
        
        ImageView smallBox = new ImageView(cont);
        ImageView mediumBox = new ImageView(cont);
        ImageView bigBox = new ImageView(cont);
        smallBox.setBackgroundResource(R.drawable.frame_small);
        mediumBox.setBackgroundResource(R.drawable.frame_medium);
        bigBox.setBackgroundResource(R.drawable.frame_big);
        LayoutParams smallParams = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        LayoutParams mediumParams = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        LayoutParams bigParams = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        
        smallParams.width = 100;
        smallParams.height = (int) (100 * 1.22);
        mediumParams.width = 125;
        mediumParams.height = (int) (125 * 1.19);
        bigParams.width = 150;
        bigParams.height = (int) (150 * 1.16);
        
        smallParams.leftMargin = boxParam[0].leftMargin;
        smallParams.topMargin = boxParam[0].topMargin-10;
        mediumParams.leftMargin = boxParam[1].leftMargin;
        mediumParams.topMargin = boxParam[1].topMargin-10;
        bigParams.leftMargin = 630;
        bigParams.topMargin = 70;
        
        boxParam[0].width =  92;
        boxParam[0].height = 92;
        boxParam[1].width = 110;
        boxParam[1].height = 110;
        boxParam[2].width = 140;
        boxParam[2].height = 140;
        boxParam[0].leftMargin = 325 + 40 -10;
        boxParam[0].topMargin = 75 + 82  -10;
        boxParam[1].leftMargin = 325 + 163  -10;
        boxParam[1].topMargin = 75 + 58  -10;
        boxParam[2].leftMargin = 325 + 313  -15;
        boxParam[2].topMargin = 75 + 33  -15;
        
        
        
        myLayout.addView(smallBox, smallParams);
        myLayout.addView(mediumBox, mediumParams);
        myLayout.addView(bigBox, bigParams);

        objParam[0].width = 80;
        objParam[0].height = 80;
        objParam[1].width = 105;
        objParam[1].height = 105;
        objParam[2].width = 130;
        objParam[2].height = 130;
        objParam[0].leftMargin = boxParam[1].leftMargin;
        objParam[0].topMargin = 300;
        objParam[1].leftMargin = boxParam[2].leftMargin;
        objParam[1].topMargin = 300;
        objParam[2].leftMargin = boxParam[0].leftMargin+10;
        objParam[2].topMargin = 300;
        
        for (int i=0; i<3; i++)
        {	
        	instArr[i][0] = objParam[i].leftMargin;
        	instArr[i][1] = objParam[i].topMargin;
        }
        GameSpace.setHeader("Расположи объекты от меньшего к большему");
        myLayout.startAnimation(animin);
        myLayout.bringToFront();
	}

	OnTouchListener sizeListener = new OnTouchListener(){

		public boolean onTouch(View v, MotionEvent event) {
			if (agree)
			{
			Log.v("touch", String.valueOf(event.getPointerId(0)));
			Log.v("touch2", String.valueOf(event.getActionIndex()));
			Log.v("touch3", String.valueOf(event.getPointerCount()));
			//if (event.getPointerId(0)==0)
			switch(event.getAction())
		      {
		      case MotionEvent.ACTION_DOWN:
		    	  changeCordsX = (int) event.getRawX();
		    	  changeCordsY = (int) event.getRawY();
		    	  pointerId = event.getPointerId(0);
		    	  action = 1;
		    	  lp = (LayoutParams) v.getLayoutParams();
		    	  drag = true;
		    	  x0 = (int)(event.getRawX()) - v.getLeft() - (int)(event.getX());
		    	  y0 = (int)(event.getRawY()) - v.getTop() - (int)(event.getY());
		    	  x_in = (int) event.getX();
		    	  y_in = (int) event.getY();
		    	  localBox = (ImageView) myLayout.findViewById(v.getId()*10);
		    	  Log.v("down", String.valueOf(x_in)+" "+String.valueOf(y_in));
		    	  v.bringToFront();
		    	  break;
		      case MotionEvent.ACTION_MOVE:
		    	  if (agree)
		    	  {
		    		 if (action == 1)
		    		 {
		    		 Log.v("moving", String.valueOf(x_cord)+" "+String.valueOf(y_cord));
		    		 x_cord = (int)event.getRawX()-x0;
		    		 y_cord = (int)event.getRawY()-y0;
		    		 x_cord-=x_in;
		    		 y_cord-=y_in;
		    		 //if (!((x_cord+half>localBox.getLeft())&&(x_cord+half<localBox.getRight())&&(y_cord+half>localBox.getTop())&&(y_cord+half<localBox.getBottom())))
		    		 //	 localBox.setBackgroundColor(clr[v.getId()-1]);
		    		 //else
		    		 //localBox.setBackgroundColor(Color.RED);
		    		 if (x_cord<x0)
		    			 x_cord = x0;
		    		 if (x_cord+(int)(v.getWidth())>myLayout.getWidth())
		    			 x_cord = myLayout.getWidth() - v.getWidth();
		    		 if (y_cord<0)
		    			 y_cord = 0;
		    		 if (y_cord+(int)(v.getHeight())>myLayout.getHeight())
		    			 y_cord = myLayout.getHeight()-v.getHeight();
		    		 lp.leftMargin = x_cord;
		    		 lp.topMargin = y_cord;

		    		 v.setLayoutParams(lp);
		    		 v.invalidate();
		    		 v.bringToFront();
		    		 }
		    	  }
		          break;
		      case MotionEvent.ACTION_POINTER_UP:
		    	  if ((event.getPointerId(event.getActionIndex()) == pointerId)&&(changeCordsX!=(int) event.getRawX())&&(changeCordsY!=(int) event.getRawY()))
		    	  {
		    		  pointerId = 999;  
			    	  drag = false;
		    		  Log.v("Animation", String.valueOf(localBox.getLeft()+" "+String.valueOf(localBox.getTop())));
		    		  Log.v("Animation", String.valueOf(event.getRawX()-x_in-x0)+" "+ String.valueOf(event.getRawY()-y_in-y0));
		    		  Log.v("Bug", String.valueOf(localBox.getLeft()-event.getRawX()+x_in+x0)+" "+String.valueOf(localBox.getTop()-event.getRawY()+y_in+y0));
			    	  if ((x_cord+half>localBox.getLeft())&&(x_cord+half<localBox.getRight())&&(y_cord+half>localBox.getTop())&&(y_cord+half<localBox.getBottom()))
			    	  {
			    		  x = true;
			    		  localparams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
			    		  localparams = (LayoutParams) v.getLayoutParams();
			    		  localparams.leftMargin = (int) (localBox.getLeft())+5;
			    		  localparams.topMargin = (int) (localBox.getTop())+5;
			    		  transAnim = new TranslateAnimation(0, localBox.getLeft()-x_cord+5, 0, localBox.getTop()-y_cord+5);
			    		  transAnim.setDuration(200);
			    		  transAnim.setFillEnabled(true);
			    		  hiding = v.getId();
			    		  transAnim.setAnimationListener(animListener);
			    		  agree = false;
			    		  v.startAnimation(transAnim);
			    		  transAnim = null;
			    		  v.setOnTouchListener(null);
			    		  imageArr[v.getId()-1] = new ImageView(cont);
			    		  
			    	  }
			    	  else
			    	  {
			    		  x = false;
			    		  transAnim = new TranslateAnimation(0, instArr[v.getId()-1][0]-x_cord, 0, instArr[v.getId()-1][1]-y_cord);
			    		  transAnim.setDuration(200);
			    		  transAnim.setFillEnabled(true);
			    		  hiding = v.getId();
			    		  localparams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
			    		  localparams = (LayoutParams) v.getLayoutParams();
			    		  localparams.leftMargin = (int) (instArr[v.getId()-1][0]);
			    		  localparams.topMargin = (int) (instArr[v.getId()-1][1]);
			    		  agree = false;
			    		  transAnim.setAnimationListener(animListener);
			    		  for (int i=0; i<3; i++)
			    			  imageArr[i].setOnTouchListener(null);
			    		  transAnim.reset();
			    		  v.startAnimation(transAnim);
			    		  v.setOnTouchListener(sizeListener);
			    		  v.bringToFront();
			    	  }
		    	  }
		    	  break;
		      case MotionEvent.ACTION_UP:
		    	  if ((event.getPointerId(event.getActionIndex()) == pointerId)&&(changeCordsX!=(int) event.getRawX())&&(changeCordsY!=(int) event.getRawY()))
		    	  {
		    	  pointerId = 999;  
		    	  drag = false;
	    		  Log.v("Animation", String.valueOf(localBox.getLeft()+" "+String.valueOf(localBox.getTop())));
	    		  Log.v("Animation", String.valueOf(event.getRawX()-x_in-x0)+" "+ String.valueOf(event.getRawY()-y_in-y0));
	    		  Log.v("Bug", String.valueOf(localBox.getLeft()-event.getRawX()+x_in+x0)+" "+String.valueOf(localBox.getTop()-event.getRawY()+y_in+y0));
		    	  if ((x_cord+half>localBox.getLeft())&&(x_cord+half<localBox.getRight())&&(y_cord+half>localBox.getTop())&&(y_cord+half<localBox.getBottom()))
		    	  {
		    		  x = true;
		    		  localparams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
		    		  localparams = (LayoutParams) v.getLayoutParams();
		    		  localparams.leftMargin = (int) (localBox.getLeft())+5;
		    		  localparams.topMargin = (int) (localBox.getTop())+5;
		    		  transAnim = new TranslateAnimation(0, localBox.getLeft()-x_cord+5, 0, localBox.getTop()-y_cord+5);
		    		  transAnim.setDuration(200);
		    		  transAnim.setFillEnabled(true);
		    		  hiding = v.getId();
		    		  transAnim.setAnimationListener(animListener);
		    		  agree = false;
		    		  v.startAnimation(transAnim);
		    		  transAnim = null;
		    		  v.setOnTouchListener(null);
		    		  imageArr[v.getId()-1] = new ImageView(cont);
		    		  
		    	  }
		    	  else
		    	  {
		    		  x = false;
		    		  transAnim = new TranslateAnimation(0, instArr[v.getId()-1][0]-x_cord, 0, instArr[v.getId()-1][1]-y_cord);
		    		  transAnim.setDuration(200);
		    		  transAnim.setFillEnabled(true);
		    		  hiding = v.getId();
		    		  localparams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
		    		  localparams = (LayoutParams) v.getLayoutParams();
		    		  localparams.leftMargin = (int) (instArr[v.getId()-1][0]);
		    		  localparams.topMargin = (int) (instArr[v.getId()-1][1]);
		    		  agree = false;
		    		  transAnim.setAnimationListener(animListener);
		    		  for (int i=0; i<3; i++)
		    			  imageArr[i].setOnTouchListener(null);
		    		  transAnim.reset();
		    		  v.startAnimation(transAnim);
		    		  v.setOnTouchListener(sizeListener);
		    		  v.bringToFront();
		    	  }
		    	  }
		    	  break;
		             default : action = 0; break;
		      }
			}
			return true;
		}
 	
 };
 
 final AnimationListener animListener = new AnimationListener(){

		public void onAnimationEnd(Animation animation) {
			ImageView localimage = (ImageView) myLayout.findViewById(hiding);
			
	        localimage.setLayoutParams(localparams);
	        localimage.requestLayout();
	    	Log.v("END!", "!!!");
	    	for (int i=0; i<3; i++)
				  imageArr[i].setOnTouchListener(sizeListener);
	    	if (x)
	    	{
	    	win++;
			  if (win == 3)
			  {
				  nextgame();
			  }
	    	}
	    	transAnim = null;
	    	agree = true;
		}

		public void onAnimationRepeat(
				Animation animation) {
			// TODO Auto-generated method stub
			
		}

		public void onAnimationStart(Animation animation) {
			// TODO Auto-generated method stub
			
		}
		  
	  };
	
}
